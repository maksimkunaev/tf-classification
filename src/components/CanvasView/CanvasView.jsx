import React, { PureComponent, Component } from 'react';
import styles from './Canvas.styl';
import container from "components/container";
import Canvas from 'components/сanvas.js/';
import tf from 'components/sketch1.js/';
import 'antd/dist/antd.css';
import { Button, notification } from 'antd';
import Select from 'react-select';

const options = [
  { value: '0', label: 'zero' },
  { value: '1', label: 'one' },
  { value: '2', label: 'two' },
];

const labels = {
    0: [1,0,0,0,0,0,0,0,0,0],
    1: [0,1,0,0,0,0,0,0,0,0],
    2: [0,0,1,0,0,0,0,0,0,0],
}
 
class CanvasView extends Component {

    constructor() {
        super();
        this.state = ({
            value: '',
            selectedOption: options[0],
        })
    }
    componentDidMount() {
        this.initCanvas();
    }

    initCanvas = () => {
        const settings = {
            width: 768,
            height: 768,
            pixel: 28
        }

        this.canvas = new Canvas(this.canv, settings);
    }

    onClear = () => {
        this.canvas.clear()
    }

    pushData = () => {
        const vector = this.canvas.calculate(true);
        const element = {
          xs: vector,
          label: labels[this.state.selectedOption.value],
        };
        this.props.addElement(element)

        this.copyToClipboard(vector);
    }


   copyToClipboard = vector => {
        const inputElement = this.input;

        const copy = () => {
              inputElement.select();
              inputElement.setSelectionRange(0, 99999);
              document.execCommand("copy");

              notification.success({
                message: 'Copied!',
              });

        } 

        this.setState({
            value: JSON.stringify(vector)
        }, copy)
    }

    startTrain = () => {
        console.log('startTrain', this.props.data);
        tf.train(this.props.data);
    }

    onPredict = () => {
        const vector = this.canvas.calculate(true);

        const mnistDigit = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.019607843831181526,0.6823529601097107,0.7686274647712708,0,0.027450980618596077,0.1882352977991104,0.5882353186607361,0.3921568691730499,0.5215686559677124,0.5215686559677124,0.2980392277240753,0.32156863808631897,0.027450980618596077,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.6509804129600525,0.9921568632125854,0.9921568632125854,0.572549045085907,0.8117647171020508,0.9921568632125854,0.9921568632125854,0.9921568632125854,0.9921568632125854,0.9921568632125854,0.95686274766922,0.6941176652908325,0.2235294133424759,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.05098039284348488,0.8745098114013672,0.9921568632125854,0.9921568632125854,0.9960784316062927,0.9921568632125854,0.9921568632125854,0.9647058844566345,0.8509804010391235,0.8509804010391235,0.8509804010391235,0.3019607961177826,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.4274509847164154,0.9921568632125854,0.9921568632125854,0.9921568632125854,0.8078431487083435,0.529411792755127,0.3294117748737335,0.2666666805744171,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.07058823853731155,0.8509804010391235,0.9921568632125854,0.686274528503418,0.2823529541492462,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.42352941632270813,0.9921568632125854,0.8823529481887817,0.1764705926179886,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.7607843279838562,0.9921568632125854,0.9215686321258545,0.3803921639919281,0.01568627543747425,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3529411852359772,0.9921568632125854,0.9921568632125854,0.9921568632125854,0.8627451062202454,0.3843137323856354,0.3843137323856354,0.14509804546833038,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.027450980618596077,0.250980406999588,0.5647059082984924,0.9529411792755127,0.9921568632125854,0.9960784316062927,0.9921568632125854,0.9372549057006836,0.501960813999176,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.24705882370471954,0.5176470875740051,0.5176470875740051,0.7921568751335144,0.9921568632125854,0.9843137264251709,0.49803921580314636,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.14509804546833038,1,0.9960784316062927,0.25882354378700256,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.062745101749897,0.529411792755127,0.9921568632125854,0.7058823704719543,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1921568661928177,0.9921568632125854,0.7058823704719543,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1921568661928177,0.9921568632125854,0.7058823704719543,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1921568661928177,0.9921568632125854,0.7058823704719543,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.04313725605607033,0.6470588445663452,0.9921568632125854,0.572549045085907,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.019607843831181526,0.33725491166114807,0.6549019813537598,0.9921568632125854,0.6392157077789307,0.0470588244497776,0,0,0,0,0,0,0,0,0,0,0,0,0,0.21960784494876862,0.45098039507865906,0.8549019694328308,0.8549019694328308,0.8549019694328308,0.8549019694328308,0.4470588266849518,0.3843137323856354,0.3843137323856354,0.8666666746139526,0.9921568632125854,0.9921568632125854,0.9215686321258545,0.1764705926179886,0,0,0,0,0,0,0,0,0,0,0,0,0,0.47843137383461,0.9529411792755127,0.9921568632125854,0.9921568632125854,0.9921568632125854,0.9921568632125854,0.9921568632125854,0.9921568632125854,0.9921568632125854,0.9921568632125854,0.9960784316062927,0.7490196228027344,0.501960813999176,0.07450980693101883,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2980392277240753,0.9921568632125854,0.9921568632125854,0.9921568632125854,0.9921568632125854,0.9921568632125854,0.9921568632125854,0.8117647171020508,0.5176470875740051,0.5176470875740051,0.27450981736183167,0.019607843831181526,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
        const myFive = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0901960784313725,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1098039215686274,0.0705882352941176,0.0549019607843137,0.0549019607843137,0.0352941176470588,0.0352941176470588,0.1058823529411765,0.2549019607843137,0.4,0.4392156862745098,0.6941176470588235,0.8235294117647058,0.9254901960784314,0.996078431372549,1,0,0,0,0,0,0,0,0,0,0,0,0,0.8549019607843137,1,0.9921568627450981,0.996078431372549,0.9882352941176471,0.9686274509803922,0.9647058823529412,0.9803921568627451,0.9882352941176471,0.9882352941176471,0.9607843137254902,0.9764705882352941,0.9686274509803922,0.9333333333333333,0.9764705882352941,0.9607843137254902,0,0,0,0,0,0,0,0,0,0,0,0,0.9058823529411765,1,0.3294117647058823,0.3294117647058823,0.2705882352941176,0.2862745098039216,0.2941176470588235,0.1529411764705882,0.0470588235294118,0.0509803921568627,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.8470588235294118,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.6549019607843137,0.9921568627450981,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.6705882352941176,0.9882352941176471,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.6470588235294118,0.9803921568627451,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5450980392156862,0.9686274509803922,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.8196078431372549,0.9725490196078431,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.9529411764705882,0.9411764705882353,0.0156862745098039,0.4313725490196079,0.8588235294117647,0.9490196078431372,0.9882352941176471,0.9921568627450981,0.9725490196078431,0.7411764705882353,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.996078431372549,0.996078431372549,0.9882352941176471,0.9803921568627451,0.9568627450980393,0.8509803921568627,0.8431372549019608,0.8784313725490196,0.9803921568627451,1,0.9607843137254902,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1254901960784314,1,0.996078431372549,0.5686274509803921,0.0196078431372549,0,0,0,0,0,0.9882352941176471,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.6235294117647059,1,0.7490196078431373,0,0,0,0,0,0,0,0.6078431372549019,1,0.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2196078431372549,0,0,0,0,0,0,0,0,0.1019607843137255,1,0.5372549019607843,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1058823529411765,1,0.5568627450980392,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.203921568627451,1,0.4509803921568628,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.8352941176470589,0.9921568627450981,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.9921568627450981,0.8156862745098039,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.9176470588235294,0.996078431372549,0.0352941176470588,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1137254901960784,0.8431372549019608,1,0.7058823529411765,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.4784313725490196,0.8352941176470589,0,0,0.0509803921568627,0.1568627450980392,0.4470588235294118,0.7843137254901961,0.9803921568627451,0.996078431372549,0.996078431372549,0.803921568627451,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.996078431372549,1,1,0.996078431372549,0.9921568627450981,0.9882352941176471,0.9803921568627451,0.9764705882352941,0.9176470588235294,0.4901960784313725,0.0274509803921569,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.4941176470588236,0.7529411764705882,0.6352941176470588,0.3490196078431372,0.1019607843137255,0.0196078431372549,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
        
        // this.canvas.drawPicture(mnistDigit.map(value=>value ? 255 : 0));

        // setTimeout(() => {
        //     this.canvas.drawPicture(myFive.map(value=>value ? 255 : 0));
        // }, 4000)

        tf.predictOne(vector);
    }

    handleChange = selectedOption => {
        this.setState({ selectedOption });
    };

    render() {
        const { selectedOption } = this.state;

        return (
              <div className={styles.canvas_view}>
                <div className={styles.controls}>
                    <button className={styles.control} onClick={this.onClear}>Clear</button>
                    <button className={styles.control} onClick={this.pushData}>Push</button>
                    <button className={styles.control} onClick={this.startTrain}>Train</button>
                    <button className={styles.control} onClick={this.onPredict}>Predict</button>
                    <Select
                    value={selectedOption}
                    onChange={this.handleChange}
                    options={options}
                    />
                    <div className="errors"></div>
                </div>

                <input id="select-this" ref={node => this.input = node} style={{position: 'absolute', left: -99999 }} value={this.state.value} onChange={()=>{}}/>
                <canvas id="canv" ref={node => this.canv = node} className={styles.canvas}>Ваш браузер устарел, обновитесь.</canvas>
              </div>
        );
    }
}

export default container(CanvasView);
